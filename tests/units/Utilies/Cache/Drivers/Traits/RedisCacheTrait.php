<?php

namespace GhaniniaIR\Tests\Units\Utilies\Cache\Drivers\Traits;


use Illuminate\Support\Facades\Redis;
use GhaniniaIR\Interactive\Utilies\Cache\Drivers\FileDriver;
use GhaniniaIR\Interactive\Utilies\Cache\Drivers\RedisDriver;

trait RedisCacheTrait {

    protected $redisDriver ;
    protected string $connectionName , $testKey ;

    protected function setUp(): void
    {
        parent::setUp();

        $this->redisDriver = new class extends RedisDriver {

            public function getConnection()
            {
                return parent::getConnection();
            }

            public function configTTL()
            {
                return parent::configTTL();
            }

            public function connectionName()
            {
                return parent::connectionName();
            }

        };

        /** test key */
        $this->testKey = "test" ;

        /**  config vars */
        $this->connectionName = "interactive" ;
        $this->connectionOption = [
            'host' => env('REDIS_HOST', '127.0.0.1'),
            'password' => env('REDIS_PASSWORD'),
            'port' => env('REDIS_PORT', 6379),
            'database' => env('REDIS_DB', 0),
        ];

        /** config connections */
        config()->set("database.redis." . $this->connectionName , $this->connectionOption) ;
        config()->set("interactive.cache.drivers.redis.connection_name" , $this->connectionName) ;
    }


    protected function tearDown(): void
    {
        Redis::connection($this->connectionName)->del($this->testKey);
        parent::tearDown(); // TODO: Change the autogenerated stub
    }
    
}